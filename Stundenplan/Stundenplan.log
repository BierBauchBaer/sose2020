This is pdfTeX, Version 3.14159265-2.6-1.40.20 (MiKTeX 2.9.7140 64-bit) (preloaded format=pdflatex 2019.9.23)  20 APR 2020 13:40
entering extended mode
**./Stundenplan.tex
(Stundenplan.tex
LaTeX2e <2018-12-01>
("C:\Program Files\MiKTeX 2.9\tex/latex/koma-script\scrartcl.cls"
Document Class: scrartcl 2019/02/01 v3.26b KOMA-Script document class (article)

("C:\Program Files\MiKTeX 2.9\tex/latex/koma-script\scrkbase.sty"
Package: scrkbase 2019/02/01 v3.26b KOMA-Script package (KOMA-Script-dependent 
basics and keyval usage)

("C:\Program Files\MiKTeX 2.9\tex/latex/koma-script\scrbase.sty"
Package: scrbase 2019/02/01 v3.26b KOMA-Script package (KOMA-Script-independent
 basics and keyval usage)

("C:\Program Files\MiKTeX 2.9\tex/latex/graphics\keyval.sty"
Package: keyval 2014/10/28 v1.15 key=value parser (DPC)
\KV@toks@=\toks14
)
("C:\Program Files\MiKTeX 2.9\tex/latex/koma-script\scrlfile.sty"
Package: scrlfile 2019/02/01 v3.26b KOMA-Script package (loading files)
)))
("C:\Program Files\MiKTeX 2.9\tex/latex/koma-script\tocbasic.sty"
Package: tocbasic 2019/02/01 v3.26b KOMA-Script package (handling toc-files)
\scr@dte@tocline@numberwidth=\skip41
\scr@dte@tocline@numbox=\box27
)
Package tocbasic Info: omitting babel extension for `toc'
(tocbasic)             because of feature `nobabel' available
(tocbasic)             for `toc' on input line 134.
Package scrartcl Info: You've used standard option `11pt'.
(scrartcl)             This is correct!
(scrartcl)             Internally I'm using `fontsize=11pt'.
(scrartcl)             If you'd like to set the option with \KOMAoptions,
(scrartcl)             you'd have to use `fontsize=11pt' there
(scrartcl)             instead of `11pt', too.
Class scrartcl Info: File `scrsize11pt.clo' used to setup font sizes on input l
ine 2162.

("C:\Program Files\MiKTeX 2.9\tex/latex/koma-script\scrsize11pt.clo"
File: scrsize11pt.clo 2019/02/01 v3.26b KOMA-Script font size class option (11p
t)
)
("C:\Program Files\MiKTeX 2.9\tex/latex/koma-script\typearea.sty"
Package: typearea 2019/02/01 v3.26b KOMA-Script package (type area)
\ta@bcor=\skip42
\ta@div=\count80
Package typearea Info: You've used standard option `a4paper'.
(typearea)             This is correct!
(typearea)             Internally I'm using `paper=a4'.
(typearea)             If you'd like to set the option with \KOMAoptions,
(typearea)             you'd have to use `paper=a4' there
(typearea)             instead of `a4paper', too.
\ta@hblk=\skip43
\ta@vblk=\skip44
\ta@temp=\skip45
\footheight=\skip46
Package typearea Info: These are the values describing the layout:
(typearea)             DIV  = 10
(typearea)             BCOR = 0.0pt
(typearea)             \paperwidth      = 597.50793pt
(typearea)              \textwidth      = 418.25555pt
(typearea)              DIV departure   = -6%
(typearea)              \evensidemargin = 17.3562pt
(typearea)              \oddsidemargin  = 17.3562pt
(typearea)             \paperheight     = 845.04694pt
(typearea)              \textheight     = 595.80026pt
(typearea)              \topmargin      = -25.16531pt
(typearea)              \headheight     = 17.0pt
(typearea)              \headsep        = 20.40001pt
(typearea)              \topskip        = 11.0pt
(typearea)              \footskip       = 47.6pt
(typearea)              \baselineskip   = 13.6pt
(typearea)              on input line 1715.
)
\c@part=\count81
\c@section=\count82
\c@subsection=\count83
\c@subsubsection=\count84
\c@paragraph=\count85
\c@subparagraph=\count86
\scr@dte@section@maxnumwidth=\skip47
Class scrartcl Info: using compatibility default `runin=bysign'
(scrartcl)           for `\section on input line 4489.
Class scrartcl Info: using compatibility default `afterindent=bysign'
(scrartcl)           for `\section on input line 4489.
\scr@dte@part@maxnumwidth=\skip48
Class scrartcl Info: using compatibility default `afterindent=false'
(scrartcl)           for `\part on input line 4497.
\scr@dte@subsection@maxnumwidth=\skip49
Class scrartcl Info: using compatibility default `runin=bysign'
(scrartcl)           for `\subsection on input line 4507.
Class scrartcl Info: using compatibility default `afterindent=bysign'
(scrartcl)           for `\subsection on input line 4507.
\scr@dte@subsubsection@maxnumwidth=\skip50
Class scrartcl Info: using compatibility default `runin=bysign'
(scrartcl)           for `\subsubsection on input line 4517.
Class scrartcl Info: using compatibility default `afterindent=bysign'
(scrartcl)           for `\subsubsection on input line 4517.
\scr@dte@paragraph@maxnumwidth=\skip51
Class scrartcl Info: using compatibility default `runin=bysign'
(scrartcl)           for `\paragraph on input line 4527.
Class scrartcl Info: using compatibility default `afterindent=bysign'
(scrartcl)           for `\paragraph on input line 4527.
\scr@dte@subparagraph@maxnumwidth=\skip52
Class scrartcl Info: using compatibility default `runin=bysign'
(scrartcl)           for `\subparagraph on input line 4537.
Class scrartcl Info: using compatibility default `afterindent=bysign'
(scrartcl)           for `\subparagraph on input line 4537.
\abovecaptionskip=\skip53
\belowcaptionskip=\skip54
\c@pti@nb@sid@b@x=\box28
Package tocbasic Info: omitting babel extension for `lof'
(tocbasic)             because of feature `nobabel' available
(tocbasic)             for `lof' on input line 5781.
\scr@dte@figure@maxnumwidth=\skip55
\c@figure=\count87
Package tocbasic Info: omitting babel extension for `lot'
(tocbasic)             because of feature `nobabel' available
(tocbasic)             for `lot' on input line 5793.
\scr@dte@table@maxnumwidth=\skip56
\c@table=\count88
Class scrartcl Info: Redefining `\numberline' on input line 5957.
\bibindent=\dimen102
)
("C:\Program Files\MiKTeX 2.9\tex/latex/geometry\geometry.sty"
Package: geometry 2018/04/16 v5.8 Page Geometry

("C:\Program Files\MiKTeX 2.9\tex/generic/oberdiek\ifpdf.sty"
Package: ifpdf 2018/09/07 v3.3 Provides the ifpdf switch
)
("C:\Program Files\MiKTeX 2.9\tex/generic/oberdiek\ifvtex.sty"
Package: ifvtex 2016/05/16 v1.6 Detect VTeX and its facilities (HO)
Package ifvtex Info: VTeX not detected.
)
("C:\Program Files\MiKTeX 2.9\tex/generic/ifxetex\ifxetex.sty"
Package: ifxetex 2010/09/12 v0.6 Provides ifxetex conditional
)
\Gm@cnth=\count89
\Gm@cntv=\count90
\c@Gm@tempcnt=\count91
\Gm@bindingoffset=\dimen103
\Gm@wd@mp=\dimen104
\Gm@odd@mp=\dimen105
\Gm@even@mp=\dimen106
\Gm@layoutwidth=\dimen107
\Gm@layoutheight=\dimen108
\Gm@layouthoffset=\dimen109
\Gm@layoutvoffset=\dimen110
\Gm@dimlist=\toks15

("C:\Program Files\MiKTeX 2.9\tex/latex/geometry\geometry.cfg"))
("C:\Program Files\MiKTeX 2.9\tex/latex/tools\tabularx.sty"
Package: tabularx 2016/02/03 v2.11b `tabularx' package (DPC)

("C:\Program Files\MiKTeX 2.9\tex/latex/tools\array.sty"
Package: array 2018/12/30 v2.4k Tabular extension package (FMi)
\col@sep=\dimen111
\ar@mcellbox=\box29
\extrarowheight=\dimen112
\NC@list=\toks16
\extratabsurround=\skip57
\backup@length=\skip58
\ar@cellbox=\box30
)
\TX@col@width=\dimen113
\TX@old@table=\dimen114
\TX@old@col=\dimen115
\TX@target=\dimen116
\TX@delta=\dimen117
\TX@cols=\count92
\TX@ftn=\toks17
) (Stundenplan.aux)
\openout1 = `Stundenplan.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 5.
LaTeX Font Info:    ... okay on input line 5.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 5.
LaTeX Font Info:    ... okay on input line 5.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 5.
LaTeX Font Info:    ... okay on input line 5.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 5.
LaTeX Font Info:    ... okay on input line 5.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 5.
LaTeX Font Info:    ... okay on input line 5.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 5.
LaTeX Font Info:    ... okay on input line 5.

*geometry* driver: auto-detecting
*geometry* detected driver: pdftex
*geometry* verbose mode - [ preamble ] result:
* driver: pdftex
* paper: a4paper
* layout: <same size as paper>
* layoutoffset:(h,v)=(0.0pt,0.0pt)
* modes: landscape 
* h-part:(L,W,R)=(56.9055pt, 731.23584pt, 56.9055pt)
* v-part:(T,H,B)=(56.9055pt, 483.69687pt, 56.9055pt)
* \paperwidth=845.04684pt
* \paperheight=597.50787pt
* \textwidth=731.23584pt
* \textheight=483.69687pt
* \oddsidemargin=-15.36449pt
* \evensidemargin=-15.36449pt
* \topmargin=-52.7645pt
* \headheight=17.0pt
* \headsep=20.40001pt
* \topskip=11.0pt
* \footskip=47.6pt
* \marginparwidth=59.7508pt
* \marginparsep=12.8401pt
* \columnsep=10.0pt
* \skip\footins=10.0pt plus 4.0pt minus 2.0pt
* \hoffset=0.0pt
* \voffset=0.0pt
* \mag=1000
* \@twocolumnfalse
* \@twosidefalse
* \@mparswitchfalse
* \@reversemarginfalse
* (1in=72.27pt=25.4mm, 1cm=28.453pt)

Stundenplan.tex:8: Missing number, treated as zero.
<to be read again> 
                   |
l.8 	\end{tabularx}
                   
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

Runaway argument?
\relax \NC@do w\NC@do W\NC@do X\@iwhilesw {\if@tempswa \@tempswafalse \ETC.
Stundenplan.tex:8: Paragraph ended before \NC@find was complete.
<to be read again> 
                   \par 
l.8 	\end{tabularx}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

Stundenplan.tex:8: Missing $ inserted.
<inserted text> 
                $
l.8 	\end{tabularx}
                   
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

Stundenplan.tex:8: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.8 	\end{tabularx}
                   
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

Stundenplan.tex:8: Misplaced alignment tab character &.
<inserted text> {|X {3}*{|X|}} Tag &
                                     MO & DI & MI \\ 
l.8 	\end{tabularx}
                   
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

Stundenplan.tex:8: Misplaced alignment tab character &.
<inserted text> {|X {3}*{|X|}} Tag & MO &
                                          DI & MI \\ 
l.8 	\end{tabularx}
                   
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

Stundenplan.tex:8: Misplaced alignment tab character &.
<inserted text> {|X {3}*{|X|}} Tag & MO & DI &
                                               MI \\ 
l.8 	\end{tabularx}
                   
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

Stundenplan.tex:8: Misplaced \crcr.
\endarray ->\crcr 
                  \egroup \egroup \@arrayright \gdef \@preamble {}
l.8 	\end{tabularx}
                   
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

Stundenplan.tex:8: Extra }, or forgotten $.
<recently read> \egroup 
                        
l.8 	\end{tabularx}
                   
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

Stundenplan.tex:8: Extra }, or forgotten $.
\TX@trial ...er \tabular \the \toks@ \endtabular }
                                                  \TX@ckpt \TX@typeout@ {\@s...
l.8 	\end{tabularx}
                   
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

Stundenplan.tex:8: Missing number, treated as zero.
<to be read again> 
                   |
l.8 	\end{tabularx}
                   
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

Runaway argument?
\relax \NC@do w\NC@do W\NC@do X\@iwhilesw {\if@tempswa \@tempswafalse \ETC.
Stundenplan.tex:8: Paragraph ended before \NC@find was complete.
<to be read again> 
                   \par 
l.8 	\end{tabularx}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

Stundenplan.tex:8: Missing $ inserted.
<inserted text> 
                $
l.8 	\end{tabularx}
                   
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

Stundenplan.tex:8: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.8 	\end{tabularx}
                   
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

Stundenplan.tex:8: Misplaced alignment tab character &.
<inserted text> {|X {3}*{|X|}} Tag &
                                     MO & DI & MI \\ 
l.8 	\end{tabularx}
                   
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

Stundenplan.tex:8: Misplaced alignment tab character &.
<inserted text> {|X {3}*{|X|}} Tag & MO &
                                          DI & MI \\ 
l.8 	\end{tabularx}
                   
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

Stundenplan.tex:8: Misplaced alignment tab character &.
<inserted text> {|X {3}*{|X|}} Tag & MO & DI &
                                               MI \\ 
l.8 	\end{tabularx}
                   
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

Stundenplan.tex:8: Misplaced \crcr.
\endarray ->\crcr 
                  \egroup \egroup \@arrayright \gdef \@preamble {}
l.8 	\end{tabularx}
                   
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

Stundenplan.tex:8: Extra }, or forgotten \endgroup.
\TX@endtabularx ...\csname endtabular*\endcsname }
                                                  \global \TX@ftn \expandaft...
l.8 	\end{tabularx}
                   
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

Stundenplan.tex:8: Extra }, or forgotten \endgroup.
\TX@endtabularx ... }\the \TX@ftn \ifnum 0=`{\fi }
                                                  \expandafter \expandafter ...
l.8 	\end{tabularx}
                   
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

[1

{C:/Users/Klossfresser/AppData/Local/MiKTeX/2.9/pdftex/config/pdftex.map}]
(Stundenplan.aux) )
(\end occurred when \iftrue on line 8 was incomplete)
(\end occurred when \iftrue on line 8 was incomplete) 
Here is how much of TeX's memory you used:
 2882 strings out of 492895
 53968 string characters out of 3133458
 230091 words of memory out of 3000000
 6835 multiletter control sequences out of 15000+200000
 6379 words of font info for 23 fonts, out of 3000000 for 9000
 1141 hyphenation exceptions out of 8191
 42i,6n,51p,9135b,136s stack positions out of 5000i,500n,10000p,200000b,50000s
<C:/Program Files/MiKTeX 2
.9/fonts/type1/public/amsfonts/cm/cmmi10.pfb><C:/Program Files/MiKTeX 2.9/fonts
/type1/public/amsfonts/cm/cmr10.pfb><C:/Program Files/MiKTeX 2.9/fonts/type1/pu
blic/amsfonts/cm/cmsy10.pfb>
Output written on Stundenplan.pdf (1 page, 27297 bytes).
PDF statistics:
 18 PDF objects out of 1000 (max. 8388607)
 0 named destinations out of 1000 (max. 500000)
 1 words of extra memory for PDF output out of 10000 (max. 10000000)

